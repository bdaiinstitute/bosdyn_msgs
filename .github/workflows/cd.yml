name: bosdyn_msgs CD

on:
  push:
    tags:
      - '*'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  BUNDLER_IMAGE_NAME: bdaiinstitute/bosdyn_msgs_bundler

jobs:
  build-container-images:
    strategy:
      matrix:
        config:
        - { runner: "ubuntu-22-04-large-runner", platform: "linux/amd64", arch: "amd64" }
        - { runner: "k8s-t2a-standard-16", platform: "linux/arm64/v8", arch: "arm64" }
    name: Build ${{ matrix.config.arch }} bundler image
    runs-on: ${{ matrix.config.runner }}
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Prepare environment
        run: |
          platform=${{ matrix.config.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Setup Docker buildx  # to workaround: https://github.com/docker/build-push-action/issues/461
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c  # https://github.com/docker/login-action
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push by digest (may be cached)
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a  # https://github.com/docker/build-push-action
        id: build
        with:
          context: .
          platforms: ${{ matrix.config.platform }}
          file: .tooling/docker/${{ matrix.config.arch }}/Dockerfile
          outputs: type=image,name=${{ env.REGISTRY }}/${{ env.BUNDLER_IMAGE_NAME }},push-by-digest=true,name-canonical=true,push=true
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1
  merge-container-images:
    name: Merge all bundler images
    runs-on: ubuntu-latest
    needs: [build-container-images]
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    outputs:
      image: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true
      - name: Setup Docker buildx  # to workaround: https://github.com/docker/build-push-action/issues/461
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c  # https://github.com/docker/login-action
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38  # https://github.com/docker/metadata-action
        with:
          images: ${{ env.REGISTRY }}/${{ env.BUNDLER_IMAGE_NAME }}
      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create \
            $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)
  build-bundles:
    strategy:
      matrix:
        config:
        - { runner: "ubuntu-22-04-large-runner", arch: "amd64" }
        - { runner: "k8s-t2a-standard-16", arch: "arm64" }
    name: Build ${{ matrix.config.arch }} bundle
    runs-on: ${{ matrix.config.runner }}
    needs: [merge-container-images]
    container:
      image: ${{ needs.merge-container-images.outputs.image }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Build ${{ matrix.config.arch }} bundle
        run: make -j VERSION=${{ github.ref_name }} ARCH=${{ matrix.config.arch }} native
      - name: Upload ${{ matrix.config.arch }} bundle artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.config.arch }}
          path: '*.run'
          retention-days: 1
  release-bundles:
    name: Release all bundles
    runs-on: ubuntu-latest
    needs: [build-bundles] 
    steps:
      - name: Download bundles
        uses: actions/download-artifact@v4
        with:
          # With no `name` specified all artifacts for the run are downloaded.
          pattern: '*.run'
          merge-multiple: true
      - name: Release bundles to Github
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          files: '*.run'
